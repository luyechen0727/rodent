echo('Coarse Brain Mask Creation')

echo('input type = ' ${INPUTTYPE} ' reg type = ' ${REGTYPE} ' SCALE = ' ${SCALE})

If( ${INPUTTYPE} == 'DWI' || ${INPUTTYPE} == 'DTI' )
echo('a')
  if( ${INPUTTYPE} == 'DWI' )
    echo('b')
    Set( image ${TEMPDIR}/${B0} )
    Set( FLAG -n 1 )

  else( ${INPUTTYPE} == 'DWI' )
    echo('c')
    Set( FLAG -n 2 )

    if( ${REGTYPE} != 'MD' || ${GIVEN_TRANSFORM} == TRUE )
      echo('elle est passee par ici')
      Set( image ${TEMPDIR}/${ROOTNAME}_DTI_MD.nrrd )
     # Set ( Cmd ${dtiprocessPATH} --dti_image ${DTI_DIR}/${DTImage} -m ${image} --scalar-float )
      SetApp(Cmd @dtiprocess)
      SetAppOption(Cmd.dti_image 1)
      SetAppOption(Cmd.dti_image.dti_imageFile ${DTI_DIR}/${DTImage})
      SetAppOption(Cmd.matrix 1)
      SetAppOption(Cmd.matrix.matrixFile ${image})
      SetAppOption(Cmd.scalarFloat 1)
      Run ( output ${Cmd} )
      echo( ${output} )
    else( ${REGTYPE} != 'MD' || ${GIVEN_TRANSFORM} == TRUE )
       echo('c bis and moving image = ' ${MOVING_IMAGE})
      Set( image ${MOVING_IMAGE} )  
    endif( ${REGTYPE} != 'MD' || ${GIVEN_TRANSFORM} == TRUE )
  EndIf( ${INPUTTYPE} == 'DWI' )

  If( ${INPUTTYPE} == 'DWI' || ${REGTYPE} != 'MD' )
  echo(' elle est repassee par la')
    if(${InitialTransform} != '' )
       echo('d')
       RegEx( TRANSFORMEDIMAGE ${image} '\.'\${Reg_Ext} REPLACE '' )
       GetFilename( TRANSFORMEDIMAGE ${TRANSFORMEDIMAGE} NAME )
       Set( TRANSFORMEDIMAGE ${TEMPDIR}/${TRANSFORMEDIMAGE}_transformed.nrrd )
#      Set( Cmd ${ResampleVolume2PATH} ${image} ${TRANSFORMEDIMAGE} -f ${InitialTransform} -R ${Grid} )
      SetAppOption(Cmd.inputVolume ${image})
      SetAppOption(Cmd.outputVolume ${TRANSFORMEDIMAGE})
      SetAppOption(Cmd.transformationFile 1)
      SetAppOption(Cmd.transformationFile.transformationFile ${InitialTransform})
      SetAppOption(Cmd.referenceVolume 1)
      SetAppOption(Cmd.referenceVolume.referenceVolume ${Grid})
      Run( output ${Cmd} )
      echo( ${output} )
      Set( image ${TRANSFORMEDIMAGE} )
    endif(${InitialTransform} != '' )

    if( ${SCALE} == TRUE )
      echo('e')
#      GetFilename( IMAGE_ISO_SCALED ${image} NAME_WITHOUT_EXTENSION )
      RegEx( IMAGE_ISO_SCALED ${image} '\.'\${Reg_Ext} REPLACE '' )
      GetFilename( IMAGE_ISO_SCALED ${IMAGE_ISO_SCALED} NAME )
      Set( IMAGE_ISO_SCALED ${TEMPDIR}/${IMAGE_ISO_SCALED}_forMask_iso_scale.nrrd )
#      Set( ResampleCmd ${ResampleVolume2PATH} ${image} ${IMAGE_ISO_SCALED} -R ${Grid} )
      SetAppOption( ResampleCmd.inputVolume ${image})
      SetAppOption( ResampleCmd.outputVolume ${IMAGE_ISO_SCALED})
      SetAppOption( ResampleCmd.referenceVolume 1)
      SetAppOption( ResampleCmd.referenceVolume.referenceVolume ${Grid})
      Run( output ${ResampleCmd} )
      echo( ${output} )
#      Set( ImageMathCmd ${ImageMathPATH} ${IMAGE_ISO_SCALED} -changeSp 1,1,1 -outfile ${IMAGE_ISO_SCALED} -type float)
      SetApp(ImageMathCmd @ImageMath)
      SetAppOption(ImageMathCmd.infile ${IMAGE_ISO_SCALED})
      SetAppOption(ImageMathCmd.changeSp 1)
      SetAppOption(ImageMathCmd.changeSp.changeSp 1,1,1)
      SetAppOption(ImageMathCmd.outfile 1)
      SetAppOption(ImageMathCmd.outfile.outputfile ${IMAGE_ISO_SCALED})
      SetAppOption(ImageMathCmd.type 1)
      SetAppOption(ImageMathCmd.type.giveType float)
      Run( output ${ImageMathCmd} )
      echo( ${output} )
      Set( image ${IMAGE_ISO_SCALED} )
    Endif( ${SCALE} == TRUE )

  else( ${INPUTTYPE} == 'DWI' || ${REGTYPE} != 'MD' )
    echo('f')
    Set( image ${MOVING_IMAGE} )
  EndIf( ${INPUTTYPE} == 'DWI' || ${REGTYPE} != 'MD' )

Else( ${INPUTTYPE} == 'DWI' || ${INPUTTYPE} == 'DTI' )
  echo('g')
  Set( FLAG -n 1 )
  Set( image ${MOVING_IMAGE} )
EndIf( ${INPUTTYPE} == 'DWI' || ${INPUTTYPE} == 'DTI' )

##Quantize input image
Set( quantizedImage ${TEMPDIR}/quantized.nrrd )
#Set( Cmd unu quantize -i ${image} -o ${quantizedImage} -b 16 )
echo('image = ' ${image})
SetApp(Cmd @unu)
SetAppOption(Cmd.quantize 1)
SetAppOption(Cmd.input 1)
SetAppOption(Cmd.input.inputFile ${image})
SetAppOption(Cmd.output 1)
SetAppOption(Cmd.output.outputFile ${quantizedImage})
SetAppOption(Cmd.b 1)
SetAppOption(Cmd.b.pad 16)
Run( output ${Cmd} )
echo( ${output} )
##Compute mask
#Set( Cmd ${MaskComputationPATH} ${quantizedImage} -a -o ${TEMPDIR}/${ROOTNAME}_Mask.nrrd ${FLAG} )
  SetApp(Cmd @MaskComputationWithThresholding)
  SetAppOption(Cmd.input ${quantizedImage})
  SetAppOption(Cmd.autoThreshold 1)
  SetAppOption(Cmd.output 1)
  SetAppOption(Cmd.output.output ${TEMPDIR}/${ROOTNAME}_Mask.nrrd)
  SetAppOption(Cmd.numberThreshold 1) 
  If( ${INPUTTYPE} == 'DWI' )
    Set( image ${TEMPDIR}/${B0} )
    Set( FLAG -n 1 )
    SetAppOption(Cmd.numberThreshold.numberThreshold '1') 
 else( ${INPUTTYPE} == 'DWI' )
    Set( FLAG -n 2 )
    SetAppOption(Cmd.numberThreshold.numberThreshold '2')
 else( ${INPUTTYPE} == 'DWI' )
 Run( output ${Cmd} )
echo( ${output} )
