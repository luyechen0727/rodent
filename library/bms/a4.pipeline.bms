### BLABLABLA

echo('a4')
echo()


set( FIRST TRUE )
set( SECOND TRUE)
set( TRANSFORM_LIST '')
set( MD_CASES '' )
#set( ALL_OTHER_CASES '' )
#set( IMCmd ${ImageMath} ${FIXED_IMG} -rescale 0,10000 -type float -outfile ${RESCALED_FIXED_IMG} )
SetApp(IMCmd @ImageMath)
SetAppOption(IMCmd.infile ${FIXED_IMG})
SetAppOption(IMCmd.rescale 1)
SetAppOption(IMCmd.rescale.rescale 0,10000)
SetAppOption(IMCmd.type 1)
SetAppOption(IMCmd.type.giveType 'float')
SetAppOption(IMCmd.outfile 1)
SetAppOption(IMCmd.outfile.outputfile ${RESCALED_FIXED_IMG})


echo(${IMCmd})
If(${step} < 4 && ${times} == 0 || ${step} < 10 && ${times} == 1)
  run( output ${IMCmd} )
  echo( ${output} )
EndIf(${step} < 4 && ${times} == 0)

foreach( i ${CASES} )
  ###Histogram Match###
  set( IMG ${atlasProcessDir}/${i}${ATLAS_INPUT_MASKED_TAG}.nrrd )
  set( MOVING_IMG ${atlasProcessDir}/${i}${ATLAS_INPUT_MASKED_TAG}_hm.nrrd )
#  set( HMCmd ${ImageMath} ${IMG} -matchHistogram ${RESCALED_FIXED_IMG} -outfile ${MOVING_IMG} -type float)
      SetApp(imageMath @ImageMath)
      SetAppOption(imageMath.infile ${IMG})
      SetAppOption(imageMath.outfile 1)
      SetAppOption(imageMath.outfile.outputfile ${MOVING_IMG})
      SetAppOption(imageMath.matchHistogram 1)
      SetAppOption(imageMath.matchHistogram.matchHistogram ${RESCALED_FIXED_IMG})
      SetAppOption(imageMath.type 1)
      SetAppOption(imageMath.type.giveType 'float')
#      run( output ${imageMath} )

  echo( ${imageMath} )
  If(${step} < 5 && ${times} == 0 || ${step} < 11 && ${times} == 1)
    run( output ${imageMath} )
    echo( ${output} )
  EndIf(${step} < 5 && ${times} == 0 || ${step} < 11 && ${times} == 1)
  ################################################
  # ANTS
  set( RESAMPLED_IMAGE ${atlasProcessDir}/${i}_to_${FIXED_CASE}.nrrd )
  set( ANTS_PREFIX ${atlasProcessDir}/${i}${ATLAS_INPUT_MASKED_TAG}_to_${FIXED_CASE})
  set( NII_FILE_PREFIX ${ANTS_PREFIX})
  set( NII_FILE ${NII_FILE_PREFIX}.nii.gz )
  set( TRANSFORM ${ANTS_PREFIX}Affine.txt )
  set(metricsCommandLine 'MI['${MOVING_IMG}', '${RESCALED_FIXED_IMG}', 1, 32]')
  #set ( AntsMICmd ANTS 3 -m MI[${MOVING_IMG},${RESCALED_FIXED_IMG},1,${AffregParam}] -i 0 -o ${NII_FILE} )
        SetApp(ants @ANTS)
        SetAppOption(ants.dimension '3')
        SetAppOption(ants.metrics 1)
        SetAppOption(ants.metrics.metricsCommand ${metricsCommandLine})
        SetAppOption(ants.iteration 1)
        SetAppOption(ants.iteration.ivalue '0')
        SetAppOption(ants.output 1)
        SetAppOption(ants.output.outputfile ${NII_FILE_PREFIX})
  echo( ${ants} )





  If(${step} < 6 && ${times} == 0 || ${step} < 12 && ${times} == 1)
    run( output ${ants} )
    echo( ${output} )
  EndIf(${step} < 6 && ${times} == 0 || ${step} < 12 && ${times} == 1)

 # set ( Warpcmd WarpImageMultiTransform 3 ${MOVING_IMG} ${RESAMPLED_IMAGE} ${TRANSFORM} -R ${RESCALED_FIXED_IMG} )
        SetApp(warp @WarpImageMultiTransform)
        SetAppOption(warp.dimension '3')
        SetAppOption(warp.input  ${MOVING_IMG})
        SetAppOption(warp.output ${RESAMPLED_IMAGE})
        SetAppOption(warp.affineFile ${TRANSFORM})
        SetAppOption(warp.reference 1)
        SetAppOption(warp.reference.reference ${RESCALED_FIXED_IMG})
  echo (${warp})

  If(${step} < 7)
    run (output ${warp})
    echo( ${output} )
  EndIf(${step} < 7)

  set(TRANSFORM_MO ${atlasProcessDir}/${i}${ATLAS_INPUT_MASKED_TAG}_to_${FIXED_CASE}MO2Aff_f.txt)
  SetApp(itktt @ITKTransformTools)
  SetAppOption(itktt.MO2Aff 1)
  SetAppOption(itktt.MO2Aff.MO2AffInputTransform ${TRANSFORM})
  SetAppOption(itktt.MO2Aff.MO2AffOutputTransform ${TRANSFORM_MO})
  echo(${itktt})
  If(${step} < 7)
  run(output ${itktt})
  echo(${output})
  EndIf(${step} < 7)

  ####Convert transform files from doubles to floats for AtlasWerks###
  set( TRANSFORM_FLOAT ${atlasProcessDir}/${i}${ATLAS_INPUT_MASKED_TAG}_to_${FIXED_CASE}Affine_f.txt )
#  set( Cmd Double2FloatTransform ${TRANSFORM} ${TRANSFORM_FLOAT})
        SetApp(double2float @Double2FloatTransform)
        SetAppOption(double2float.inputTransform ${TRANSFORM_MO})
        SetAppOption(double2float.outputTransform ${TRANSFORM_FLOAT})
  echo( ${double2float} )

  If(${step} < 8 && ${times} == 0 || ${step} < 13 && ${times} == 1)
    run( output ${double2float} )
    echo( ${output} )
  EndIf(${step} < 8 && ${times} == 0 || ${step} < 13 && ${times} == 1)

  set( TRANSFORM_LIST ${TRANSFORM_LIST} ${TRANSFORM_FLOAT} )
  set( MD_CASES ${MD_CASES} ${MOVING_IMG} )
  ####List of images to compute average affinely registered images

  if( ${FIRST} == TRUE )
    set( FIRST_CASE ${RESAMPLED_IMAGE} )
    set( FIRST FALSE )
    echo()
    echo()    
    echo('first case = ' ${FIRST_CASE})
    echo()
    echo()    
  else( ${FIRST} == TRUE )
    if(${SECOND} == TRUE)
      set( ALL_OTHER_CASES ${RESAMPLED_IMAGE} )
      set(SECOND FALSE)
    else(${SECOND} == TRUE)
      set( ALL_OTHER_CASES ${ALL_OTHER_CASES} ${RESAMPLED_IMAGE})
    endif(${SECOND} == TRUE)
    echo()
    echo()    
    echo('ALL_OTHER_CASES = ' ${ALL_OTHER_CASES} )
    echo()
    echo()    
  endif( ${FIRST} == TRUE )
endforeach( ${CASES} )

Inc( times 1 )
Int( ${times} )
