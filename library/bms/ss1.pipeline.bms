### The script uses:
#-ABC
#-SegPostProcessCLP
#-ImageMath
#-ResampleVolume2
####################Configure############################################
Include( ss.config.bms )
echo()
echo('ss1 ')
echo()
############### adapt from the midas config file to the scripts variables ##############
set ( ATLAS_FILES ${templatefiles})
set ( ATLAS_GRID ${templategridfile})
if( ${ATLAS_GRID} != '' )
  set( scaled TRUE )
else()
  set( scaled FALSE )
endif()
set ( NEW_MASK_TAG ${newmasktag}.nrrd )
set ( Rigid ${rigid})
set ( Registration ${registration})
set ( biasFieldCorrection ${biasfieldcorrection})
set ( RIGID_IS_FA ${rigidisFA})
set ( RIGID_IS_MD ${rigidisMD})
set ( IS_SCALAR ${scalar})
echo ('IS SCALAR = ' ${IS_SCALAR})
set ( IS_SCALED ${scaled})
if( ${segimagestype} != '' )
  set ( ABC_IMAGE_SUFFIX ${segimagestype})
else()
  set ( ABC_IMAGE_SUFFIX ${casesInputs})
endif()
set ( MASK_CLOSING_RADIUS ${radius})
set ( PRIORS ${abcpriors})
#set(PRIORS '1' '1' '1' '1')
#set ( seq ${sequence})
sequence(seq 0 0 1)
set ( CASES ${cases})

setApp (ITKTransformTools @ITKTransformTools)
setApp (ANTS @ANTS)
setApp (RegisterImages @RegisterImages)
setApp (ImageMath @ImageMath)
SetApp (ABC @ABC)
SetApp (segPostProcessCLP @SegPostProcessCLP)
SetApp(imageMath @ImageMath)
set (tempDir ${cfg_output_directory}/tempDione)

# set (step 16)

# setting RIGID_REGISTRATION_IMAGE_SUFFIX
GetParam (OneCase ${casesInputs} 0)
GetParam (OneCasePrefix ${cases} 0)
RegEx ( WithoutPath ${OneCase} '/.+/' REPLACE '')
RegEx ( RIGID_REGISTRATION_IMAGE_SUFFIX ${WithoutPath} ${OneCasePrefix} REPLACE '')



# setting templateDir for ABC
GetParam (SingleCase ${ATLAS_FILES} 0)
RegEx ( WithoutPath ${SingleCase} '/.+/' REPLACE '')
RegEx ( templateDir ${ATLAS_FILES} ${WithoutPath} REPLACE '')




set( ABCSUFFIX seg )
# Int(${step})
####################run ABC##############################################
# apply ABC for brain skull stripping
# run ABC

set( CORRECTED '' )
set( dilatedMASK '' )
Include( ss2.pipeline.bms )
If( ${IS_SCALED} != TRUE )
  Include (ss3.pipeline.bms)
EndIf( ${IS_SCALED} != TRUE )
GetParam(ABC_IMAGE_SUFFIX_ONE ${ABC_IMAGE_SUFFIX} 0)
GetParam (OneCasePrefix ${cases} 0)
RegEx ( Without_Path ${ABC_IMAGE_SUFFIX_ONE} '/.+/' REPLACE '')
RegEx ( SUFFIX ${Without_Path} ${OneCasePrefix} REPLACE '')
#GetFilename( SUFFIX ${SUFFIX} NAME_WITHOUT_EXTENSION )
GetFilename( NEW_MASK_TAG_NO_EXT ${NEW_MASK_TAG} NAME_WITHOUT_EXTENSION )
#set( NB_LOOP ${NB_LOOP}-1 )

set (iteration 0)

# CASES = 0009 0010 0011... 
ForEach (Case ${CASES})
  
  echo('iteration ' ${iteration} ' with case ' ${Case})

  set (OutputSubjDir ${tempDir}/${Case})
  set (PROCESS_SUBDIR 3-SkullStripping)

#  MakeDirectory( ${tempDir}/${Case} )
  GetParam ( CaseDir ${casesInputs} ${iteration} )
  GetParam ( OutputFolderId ${cases_outputFolderIds} ${iteration} )
  RegEx ( CaseCompleteNameWithoutPath ${CaseDir} '/.+/' REPLACE '' )
  RegEx ( InputSubjDir ${CaseDir} ${CaseCompleteNameWithoutPath} REPLACE '' )
#  set ( OutputSubjDir ${dir}/${OUTPUT_PRE_SUBDIR}/${Case})
  Include (ss4.pipeline.bms)
  MakeDirectory( ${OutputSubjDir}/${PROCESS_SUBDIR} )


  ForEach( i ${seq} )
    Include (ss7.pipeline.bms)
  EndForEach( i ${seq} )

#  set (testVar 0)
#  Include (ss7.pipeline.bms)
#  set (testVar 1)
#  Include (ss7.pipeline.bms)
#  set (testVar 2)
#  Include (ss7.pipeline.bms)

  set( FinalMASK ${OutputSubjDir}/${PROCESS_SUBDIR}/${Case}${NEW_MASK_TAG} )#we save mask in case directory
#  set( Cmd ${ResampleVolume2} ${dilatedMASK} ${FinalMASK} -i nn )
    SetApp(rv2 @ResampleVolume2)
    SetAppOption(rv2.inputVolume ${dilatedMASK})
    SetAppOption(rv2.outputVolume ${FinalMASK})
    SetAppOption(rv2.interpolationType 1)
    SetAppOption(rv2.interpolationType.interpolationType 'nn')
  If( ${step} < 19 )
    CondorPostScript(rv2 ${cfg_exe} ${cfg_condorpostscript} ${cfg_output_directory} ${FinalMASK} ${OutputFolderId})
    run( output ${rv2} )
    echo( ${output} )
  EndIf( ${step} < 19 )
  set( CORRECTED ${ABC_Case_DIR}/${CaseNoDot}_corrected_${ABCSUFFIX}.nrrd )
    echo()
    echo('Redined corrected as ' ${CORRECTED} 'in ss1')
    echo()
  set( CORRECTED_COPY ${OutputSubjDir}/${PROCESS_SUBDIR}/${Case}${SUFFIX}_corrected.nrrd )
  If( ${biasFieldCorrection} == TRUE )
   # set( Cmd ${ResampleVolume2} ${CORRECTED} ${CORRECTED_COPY} -i nn )
    SetApp(rv2 @ResampleVolume2)
    SetAppOption(rv2.inputVolume ${CORRECTED})
    SetAppOption(rv2.outputVolume ${CORRECTED_COPY})
    SetAppOption(rv2.interpolationType 1)
    SetAppOption(rv2.interpolationType.interpolationType 'nn')
    If( ${step} < 20 )
      CondorPostScript(rv2 ${cfg_exe} ${cfg_condorpostscript} ${cfg_output_directory} ${CORRECTED_COPY} ${OutputFolderId})
      run( output ${rv2} )
      echo( ${output} )
    EndIf( ${step} < 20 )
  EndIf( ${biasFieldCorrection} == TRUE )
  #if( ${ScriptName} != '' )
    GetFilename( name ${ScriptName} NAME )
    If( ${step} < 21 )
   #   CopyFile( ${ScriptName} ${OutputSubjDir}/${PROCESS_SUBDIR}/${name} )
      CopyFile( ${ABC_Case_DIR}/${Case}.xml ${OutputSubjDir}/${PROCESS_SUBDIR}/${Case}.xml )
    EndIf( ${step} < 21 )
  #Endif( ${ScriptName} != '')
  Inc (${iteration} 1)
EndForEach( ${CASES} )
