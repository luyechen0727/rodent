echo()
echo('a6')
echo()

Set(count 0)
Set(count2 0)
set( AtlasSS ${outputDir}/AverageImage_SS.nrrd )
set( AtlasNSS ${outputDir}/AverageImage_NSS.nrrd )
set( AtlasSS_orig ${outputDir}/AverageImage_SS_orig.nrrd )
set( AtlasNSS_orig ${outputDir}/AverageImage_NSS_orig.nrrd )

#########################################################################################
HISTOGRAM MATCH = FALSE
#########################################################################################

IF (${HISTOGRAM_MATCH} == 'FALSE')
  set (iterationHM 0)
  foreach( i ${CASES} )
    GetParam(OneCase ${casesInputs} ${iterationHM})
    RegEx(WithoutPath ${OneCase} '/.+/' REPLACE '')
    RegEx(InSubjDir ${OneCase} ${WithoutPath} REPLACE '')
    Set (OutSubjDir ${outputDir}/${i})
    Set( hfield ${OutSubjDir}/${PROCESS_SUBDIR}/${i}_hFieldToAtlas.mha )
    Set( MD ${atlasProcessDir}/${i}${ATLAS_INPUT_MASKED_TAG}.nrrd )
    Set( TRANSFORMED_MD ${atlasProcessDir}/${i}_SS.nrrd )

#    set( ResampleCmd ${ResampleVolume2} ${MD} ${TRANSFORMED_MD} -H ${hfield})
      SetApp(ResampleCmd @ResampleVolume2)
      SetAppOption(ResampleCmd.inputVolume ${MD})
      SetAppOption(ResampleCmd.outputVolume ${TRANSFORMED_MD})
      SetAppOption(ResampleCmd.deffield 1)
      SetAppOption(ResampleCmd.deffield.deffield ${hfield})
    echo( ${ResampleCmd} )
    If( ${step} < 32 )
      run( output ${ResampleCmd} )
      echo( ${output} )
    EndIf( ${step} < 32 )

    Set( NSS_MD ${InSubjDir}/${i}${ATLAS_INPUT_SUFFIX} )
    Set( TRANSFORMED_NSS_MD ${atlasProcessDir}/${i}_NSS.nrrd )
 #   set( ResampleCmd ${ResampleVolume2} ${NSS_MD} ${TRANSFORMED_NSS_MD} -H ${hfield})
      SetApp(ResampleCmd @ResampleVolume2)
      SetAppOption(ResampleCmd.inputVolume ${NSS_MD})
      SetAppOption(ResampleCmd.outputVolume ${TRANSFORMED_NSS_MD})
      SetAppOption(ResampleCmd.deffield 1)
      SetAppOption(ResampleCmd.deffield.deffield ${hfield})
    echo( ${ResampleCmd} )
    If( ${step} < 33 )
      run( output ${ResampleCmd} )
      echo( ${output} )
    EndIf( ${step} < 33 )

    if( ${count} == 0 )
      Set( FIRST_MDIMAGES ${TRANSFORMED_MD} )
      Set( FIRST_NSS_MDIMAGES ${TRANSFORMED_NSS_MD} )
    else( ${count} == 0 )
if( ${count2} == 0)
      Set( LIST_MDIMAGES ${FIRST_MDIMAGES} ${TRANSFORMED_MD} )
      Set( LIST_NSS_MDIMAGES ${FIRST_NSS_MDIMAGES} ${TRANSFORMED_NSS_MD} )
     Inc(${count2} 1)
     Int( ${count2} )
else( ${count2} == 0)
      Set( LIST_MDIMAGES ${LIST_MDIMAGES} ${TRANSFORMED_MD} )
      Set( LIST_NSS_MDIMAGES ${LIST_NSS_MDIMAGES} ${TRANSFORMED_NSS_MD} )
endif( ${count2} == 0)
    endif( ${count} == 0 )
    Inc(${count} 1)
    Int( ${count} )
    Inc(${iterationHM} 1)
  endforeach( ${CASES} )

 # Set( Cmd ${ImageMath} ${FIRST_MDIMAGES} -avg ${LIST_MDIMAGES} -outfile ${AtlasSS} -type float )
      SetApp(imageMath @ImageMath)
      SetAppOption(imageMath.infile ${FIRST_MDIMAGES})
      SetAppOption(imageMath.outfile 1)
      SetAppOption(imageMath.outfile.outputfile ${AtlasSS})
      SetAppOption(imageMath.avg 1)
      SetAppOption(imageMath.avg.avg ${LIST_MDIMAGES})
      SetAppOption(imageMath.type 1)
      SetAppOption(imageMath.type.giveType 'float')
      run( output ${imageMath} )
  If( ${step} < 34 )
    Run( output ${imageMath} )
    echo( ${output} )
  EndIf( ${step} < 34 )
 # Set( Cmd ${ImageMath} ${FIRST_NSS_MDIMAGES} -avg ${LIST_NSS_MDIMAGES} -outfile ${AtlasNSS} -type float )
      SetApp(imageMath @ImageMath)
      SetAppOption(imageMath.infile ${FIRST_NSS_MDIMAGES})
      SetAppOption(imageMath.outfile 1)
      SetAppOption(imageMath.outfile.outputfile ${AtlasNSS})
      SetAppOption(imageMath.avg 1)
      SetAppOption(imageMath.avg.avg ${LIST_NSS_MDIMAGES})
      SetAppOption(imageMath.type 1)
      SetAppOption(imageMath.type.giveType 'float')
      run( output ${imageMath} )
  If( ${step} < 35 )
    Run( output ${imageMath} )
    echo( ${output} )
  EndIf( ${step} < 35 )

###############################################################################
## recalculating average from the original images with transform and h-Field ##

If (${Recalculate_avg} == TRUE)
  set (count 0)
  set(count2 0)


set(iterationAvg 0)
foreach( i ${CASES} )
    GetParam(OneCase ${casesInputs} ${iterationAvg})
    GetParam(OneOriginal ${casesOriginals} ${iterationAvg})
    RegEx(WithoutPath ${OneCase} '/.+/' REPLACE '')
    RegEx(InSubjDir ${OneCase} ${WithoutPath} REPLACE '')
    GetParam(OneTransform ${casesTransforms} ${iterationAvg})
    Set (OutSubjDir ${outputDir}/${i})
 
#  If(${Original_has_prefix} == FALSE)
#   Set( originalImage ${dir}/${i}/T1.gipl.gz )
#  Else(${Original_has_prefix} == FALSE)
   Set( originalImage ${OneOriginal} )
#  EndIf(${Original_has_prefix} == FALSE)

  Set( resampledOriginalFile ${atlasProcessDir}/${i}_transformed.nrrd )
  set( resampledOriginalFileMasked ${atlasProcessDir}/${i}${DTI_TAG}_transformed_masked.nrrd )
  Set( hfield ${OutSubjDir}/${PROCESS_SUBDIR}/${i}_hFieldToAtlas.mha )

      SetApp(rv2 @ResampleVolume2)
      SetAppOption(rv2.inputVolume ${originalImage})
      SetAppOption(rv2.outputVolume ${resampledOriginalFile})
      SetAppOption(rv2.referenceVolume 1)
      SetAppOption(rv2.referenceVolume.referenceVolume ${FIXED_IMG})
  if( ${OneTransform} != '' )
      SetAppOption(rv2.transformationFile 1)
      SetAppOption(rv2.transformationFile.transformationFile ${OneTransform})
    set( combinedTransforms -f ${OneTransform} )
  else( ${OneTransform} != '' )
    set( combinedTransforms '' )
  Endif( ${OneTransform} != '' )
  Set( hfield ${OutSubjDir}/${PROCESS_SUBDIR}/${i}_hFieldToAtlas.mha )
#  set( ResampleVolCmd ${ResampleVolume2} ${originalImage} ${resampledOriginalFile} ${combinedTransforms} -H ${hfield} -R ${FIXED_IMG})

     echo( ${rv2} )

  If( ${step} < 36 )
    run( output ${rv2} )
    echo( ${output} )
  EndIf( ${step} < 36 )

  ####transform mask###################
  set( mask ${InSubjDir}/${i}${NEW_MASK_TAG} )
  set( maskTransformed ${atlasProcessDir}/${i}_mask_transformed.nrrd )
 # set( ResampleCmd ${ResampleVolume2} ${mask} ${maskTransformed} -H ${hfield} -R ${FIXED_IMG} -i nn )
      SetApp(rv2 @ResampleVolume2)
      SetAppOption(rv2.inputVolume ${mask})
      SetAppOption(rv2.outputVolume ${maskTransformed})
      SetAppOption(rv2.deffield 1)
      SetAppOption(rv2.deffield.deffield ${hfield})
      SetAppOption(rv2.referenceVolume 1)
      SetAppOption(rv2.referenceVolume.referenceVolume ${FIXED_IMG})
      SetAppOption(rv2.interpolationType 1)
      SetAppOption(rv2.interpolationType.interpolationType 'nn')
  echo( ${rv2} )
  If( ${step} < 37 )
  run( output ${rv2} )
  echo( ${output} )
  EndIf( ${step} < 37 )

  ####mask images##########################
 # set( maskCmd ${ImageMath} ${resampledOriginalFile} -mask ${maskTransformed} -outfile ${resampledOriginalFileMasked} -type float)
      SetApp(imageMath @ImageMath)
      SetAppOption(imageMath.infile ${resampledOriginalFile})
      SetAppOption(imageMath.outfile 1)
      SetAppOption(imageMath.outfile.outputfile ${resampledOriginalFileMasked})
      SetAppOption(imageMath.mask 1)
      SetAppOption(imageMath.mask.mask ${maskTransformed})
      SetAppOption(imageMath.type 1)
      SetAppOption(imageMath.type.giveType 'float')
  echo( ${imageMath} )

  If( ${step} < 38 )
  run( output ${imageMath} )
  echo( ${output} )
  EndIf( ${step} < 38 )

  ####save list of images##########################
    if( ${count} == 0 )
      Set( FIRST_ORIGIMAGES ${resampledOriginalFileMasked} )
      Set( FIRST_NSS_ORIGIMAGES ${resampledOriginalFile} )
    else( ${count} == 0 )
if( ${count2} == 0)
      Set( LIST_ORIGIMAGES ${FIRST_ORIGIMAGES} ${resampledOriginalFileMasked} )
      Set( LIST_NSS_ORIGIMAGES ${FIRST_NSS_ORIGIMAGES} ${resampledOriginalFile} )
     Inc(${count2} 1)
     Int( ${count2} )
else( ${count2} == 0)
      Set( LIST_ORIGIMAGES ${LIST_ORIGIMAGES} ${resampledOriginalFileMasked} )
      Set( LIST_NSS_ORIGIMAGES ${LIST_NSS_ORIGIMAGES} ${resampledOriginalFile} )
endif( ${count2} == 0)
    endif( ${count} == 0 )
    Inc(${count} 1)
    Int( ${count} )
    Inc(${iterationAvg} 1)
endforeach( i ${CASES} )

  ####compute ##########################
#Set( Cmd ${ImageMath} ${FIRST_NSS_ORIGIMAGES} -avg ${LIST_NSS_ORIGIMAGES} -outfile ${AtlasNSS_orig} -type float )
      SetApp(imageMath @ImageMath)
      SetAppOption(imageMath.infile ${FIRST_NSS_ORIGIMAGES})
      SetAppOption(imageMath.outfile 1)
      SetAppOption(imageMath.outfile.outputfile ${AtlasNSS_orig})
      SetAppOption(imageMath.avg 1)
      SetAppOption(imageMath.avg.avg ${LIST_NSS_ORIGIMAGES})
      SetAppOption(imageMath.type 1)
      SetAppOption(imageMath.type.giveType 'float')
  echo( ${imageMath} )
  If( ${step} < 39 )
    run( output ${imageMath} )
    echo( ${output} )
  If( ${step} < 39 )

#  Set( Cmd ${ImageMath} ${FIRST_ORIGIMAGES} -avg ${LIST_ORIGIMAGES} -outfile ${AtlasSS_orig} -type float )
      SetApp(imageMath @ImageMath)
      SetAppOption(imageMath.infile ${FIRST_ORIGIMAGES})
      SetAppOption(imageMath.outfile 1)
      SetAppOption(imageMath.outfile.outputfile ${AtlasSS_orig})
      SetAppOption(imageMath.avg 1)
      SetAppOption(imageMath.avg.avg ${LIST_ORIGIMAGES})
      SetAppOption(imageMath.type 1)
      SetAppOption(imageMath.type.giveType 'float')
  echo( ${imageMath} )
  If( ${step} < 40 )
    run( output ${imageMath} )
    echo( ${output} )
  If( ${step} < 40 )

EndIf (${Recalculate_avg} == TRUE)

#########################################################################################
HISTOGRAM MATCH = TRUE
#########################################################################################

ENDIF (${HISTOGRAM_MATCH} == 'FALSE')
  IF(${HISTOGRAM_MATCH} == 'TRUE')
    set(iterationHM2 0)
    foreach( i ${CASES} )
      GetParam(OneCase ${casesInputs} ${iterationHM2})
      RegEx(WithoutPath ${OneCase} '/.+/' REPLACE '')
      RegEx(InSubjDir ${OneCase} ${WithoutPath} REPLACE '')
      Set (OutSubjDir ${outputDir}/${i})
      Set( hfield ${OutSubjDir}/${PROCESS_SUBDIR}/${i}_hFieldToAtlas.mha )
      Set( NSS_MD ${InSubjDir}/${i}${ATLAS_INPUT_SUFFIX} )
      Set( TRANSFORMED_NSS_MD ${atlasProcessDir}/${i}_NSS.nrrd )
 #     set( ResampleCmd ${ResampleVolume2} ${NSS_MD} ${TRANSFORMED_NSS_MD} -H ${hfield})
      SetApp(rv2 @ResampleVolume2)
      SetAppOption(rv2.inputVolume ${NSS_MD})
      SetAppOption(rv2.outputVolume ${TRANSFORMED_NSS_MD})
      SetAppOption(rv2.deffield 1)
      SetAppOption(rv2.deffield.deffield ${hfield})
      echo( ${rv2} )
      If( ${step} < 41 )
        run( output ${rv2} )
        echo( ${output} )
      EndIf( ${step} < 41 )

      if( ${count} == 0 )
        Set( FIRST_NSS_MDIMAGES ${TRANSFORMED_NSS_MD} )
      else( ${count} == 0 )
        Set( LIST_NSS_MDIMAGES ${LIST_NSS_MDIMAGES} ${TRANSFORMED_NSS_MD} )
      endif( ${count} == 0 )
      Inc(${count} 1)
      Int( ${count} )
      Inc (${iterationHM2} 1)
    endforeach( ${CASES} )

############################# SET PATH CORRECTLY
 # set( Histo ${ResampleVolume2} avg_template.nii.gz ${AtlasSS} -i nn)
     SetApp(rv2 @ResampleVolume2)
      SetAppOption(rv2.inputVolume avg_template.nii.gz)
      SetAppOption(rv2.outputVolume ${AtlasSS})
      SetAppOption(rv2.interpolationType 1)
      SetAppOption(rv2.interpolationType.interpolationType 'nn')
  If( ${step} < 42 )
    Run( output ${rv2} )
    echo( ${output} )
  EndIf( ${step} < 42 )

  #Set( Cmd ${ImageMath} ${FIRST_NSS_MDIMAGES} -avg ${LIST_NSS_MDIMAGES} -outfile ${AtlasNSS} -type float )
      SetApp(imageMath @ImageMath)
      SetAppOption(imageMath.infile ${FIRST_NSS_MDIMAGES})
      SetAppOption(imageMath.outfile 1)
      SetAppOption(imageMath.outfile.outputfile ${AtlasNSS})
      SetAppOption(imageMath.avg 1)
      SetAppOption(imageMath.avg.avg ${LIST_NSS_MDIMAGES})
      SetAppOption(imageMath.type 1)
      SetAppOption(imageMath.type.giveType 'float')
  If( ${step} < 43 )
    Run( output ${imageMath} )
    echo( ${output} )
  EndIf( ${step} < 43 )
  ENDIF (${HISTOGRAM_MATCH} == 'TRUE')
